# -*- coding: utf-8 -*-
"""21201068_Anika Bushra_CSE422_12_Assignment01_Fall2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D0cweDpfBIhEnBs3DhaOuYoTHqUWnKFI
"""

import heapq

f1, f2 = open('D:/Input file.txt', 'r'), open('D:/Output file.txt', 'w')
txt1 = f1.readlines()

graph = {}
h_val = {}

for i in txt1:
    var1 = i.strip().split()
    node = var1[0]
    h_val[node] = int(var1[1])
    c_node = []
    for idx in range(2, len(var1), 2):
        n = var1[idx]
        d = int(var1[idx + 1])
        c_node.append((n, d))

    graph[node] = c_node


start, goal = input('Start node: ').strip(), input('Destination: ').strip()

node_q = []
heapq.heappush(node_q, (h_val[start], 0, start, [start]))
node_found = None
path_cost = None

while node_q:
    x, y, z, w = heapq.heappop(node_q)

    if z == goal:
        node_found = w
        path_cost = y
        break

    for n, d in graph.get(z, []):
        update_cost = y + d
        approx_cost = update_cost + h_val.get(n, float('inf'))
        heapq.heappush(node_q, (approx_cost, update_cost, n, w + [n]))

if node_found:
    for index in range(len(node_found)):
        if index != len(node_found) - 1:
            print(node_found[index], end = ' --> ')
            f2.write(node_found[index] + ' --> ')
        else:
            print(node_found[index])
            f2.write(node_found[index] + '\n')
    print('Total distance: ', path_cost, 'km')
    f2.write('Total distance: ' + str(path_cost) + 'km')
else:
    print('No path found')
    f2.write('No path found')

f1.close()
f2.close()